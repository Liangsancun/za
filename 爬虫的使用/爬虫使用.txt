Requestium ，结合了 Chrome 59 以后的 headless 无头特性（代替了 phantomjs）。效率稍低，但是稳，前端渲染的网页也可以爬取解析。
	= Requests+ Selenium +Parsel

对每次获取的中间结果进行去重（set，数据库用主键）（特别是url，爬了10000多个，去重后之后800多个）
每100次保存一次结果到数据库。
	如果要保存到txt中：'a' 追加 100个保存一次
		对于二维数组，一个一维数组一行( json.dumps(arr,ensure_ascii=False)+'\n')
		对于一维数组，一个元素一行（str(一个元素)+'\n')

		不这样的话，因为json.loads()会出现各种问题
可将中间数据存在数据库中，这样可一边继续获取中间数据，一边利用中间数据获取最终数据（获取前100个中间数据，
	利用他们获取到100个最终数据后，先将最终数据插入数据库，再将数据库的前100个中间数据删掉，避免重复使用。
	也可以在用后，将中间数据，存到另一张新表中，以留后看，当然后，原表中的中间数据还是删掉）


策略：
userAgent
代理s 换成百度头等
Time.sleep 降低访问频率
每次requests.get()后，及时Req.close()（close()之后，也可以 获取req.text())
多线程、进程
分布式

